name: Deploy to EC2

on:
  pull_request:
    branches:
      - develop

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.yarn
          key: ${{ runner.OS }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-yarn-

      - name: Install dependencies
        run: yarn install
        working-directory: ./front

      - name: Build project
        run: yarn build
        working-directory: ./front
       
      - name: Check build output
        run: ls -la .next
        working-directory: ./front

      - name: Deploy to EC2
        env:
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
        run: |
          echo "$EC2_SSH_KEY" > ec2_key.pem
          chmod 600 ec2_key.pem
          scp -i ec2_key.pem -o StrictHostKeyChecking=no -r ./front/.next ./front/public ./front/package.json ./front/yarn.lock $EC2_USER@$EC2_HOST:~/coreal_repo/front/
          ssh -i ec2_key.pem -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST '
            set -x
            cd ~/coreal_repo/front
            echo "PM2 프로세스 상태 확인"
            pm2 list
            if pm2 list | grep -q "coreal_frontend"; then
              echo "기존 프로세스 중지 및 삭제"
              pm2 stop coreal_frontend
              pm2 delete coreal_frontend
            fi
            echo "의존성 설치"
            yarn install
            echo "새 프로세스 시작"
            pm2 start yarn --name "coreal_frontend" -- start -- -port 8080
            echo "프론트엔드 배포 완료."
          '