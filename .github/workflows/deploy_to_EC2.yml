name: EC2 배포
run-name: EC2 배포를 합니다. 🚀
on: [pull_request]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  actions: write #  to cancel/stop running workflows (styfle/cancel-workflow-action)
  contents: read #  to fetch code (actions/checkout)

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./front
    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v2

      - name: Node.js 설정
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: 의존성 설치
        run: yarn install

      - name: Next.js 앱 빌드
        run: yarn build

      - name: SSH 키 및 known_hosts 설정
        env:
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
        run: |
          mkdir -p ~/.ssh
          echo "$EC2_SSH_KEY" > ~/.ssh/ec2_key.pem
          chmod 600 ~/.ssh/ec2_key.pem
          ssh-keyscan -H $EC2_HOST >> ~/.ssh/known_hosts

      - name: SSH 연결 테스트
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
        run: |
          ssh -i ~/.ssh/ec2_key.pem -o StrictHostKeyChecking=no -vvv $EC2_USER@$EC2_HOST 'echo "SSH 연결 성공"'

      - name: EC2에 배포
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
        run: |
          scp -i ~/.ssh/ec2_key.pem -o StrictHostKeyChecking=no -r .next package.json yarn.lock $EC2_USER@$EC2_HOST:~/coreal_repo/front

          ssh -i ~/.ssh/ec2_key.pem -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST '
            set -x
            cd ~/coreal_repo/front
            yarn install --production
            
            echo "PM2 프로세스 상태 확인"
            pm2 list
            
            if pm2 list | grep -q "coreal_frontend"; then
              echo "기존 프로세스 중지 및 삭제"
              pm2 stop coreal_frontend
              pm2 delete coreal_frontend
            fi
            
            echo "새 프로세스 시작"
            pm2 start yarn --name "coreal_frontend" -- start --port 8080
            
            echo "프론트엔드 배포 완료"
          '
