name: BE-DEV CI/CD

on:
  pull_request:
    types: [closed]
    branches:
      - main
    paths:
      - 'back/**'

jobs:
  build-and-deploy:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Build and Test with Gradle
      run: |
        cd back
        chmod +x ./gradlew
        ./gradlew clean build --stacktrace

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build Docker
      run: |
        cd back
        docker build --platform linux/amd64 -t ${{ secrets.DOCKERHUB_USERNAME }}/coreal_server .

    - name: Push Docker
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/coreal_server:latest

    - name: Set target IP
      run: |
        STATUS=$(curl -s -o /dev/null -w "%{http_code}" "http://***/env")
        CURL_EXIT_CODE=$?
        if [ $CURL_EXIT_CODE -eq 0 ] && [ "$STATUS" = "200" ]; then
          CURRENT_UPSTREAM=$(curl -s "http://${{ secrets.COREAL_SERVER_IP }}/env")
        else
          CURRENT_UPSTREAM=green
        fi
        echo CURRENT_UPSTREAM=$CURRENT_UPSTREAM >> $GITHUB_ENV
        if [ $CURRENT_UPSTREAM = blue ]; then
          echo "CURRENT_PORT=8080" >> $GITHUB_ENV
          echo "STOPPED_PORT=8081" >> $GITHUB_ENV
          echo "TARGET_UPSTREAM=green" >> $GITHUB_ENV
        elif [ $CURRENT_UPSTREAM = green ]; then
          echo "CURRENT_PORT=8081" >> $GITHUB_ENV
          echo "STOPPED_PORT=8080" >> $GITHUB_ENV
          echo "TARGET_UPSTREAM=blue" >> $GITHUB_ENV
        else
          echo "error"
          exit 1
        fi

    - name: Docker compose
      uses: appleboy/ssh-action@master
      with:
        username: ubuntu
        host: ${{ secrets.COREAL_SERVER_IP }}
        key: ${{ secrets.BACK_EC2_SSH_KEY }}
        script_stop: true
        script: |
          sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/coreal_server:latest
          sudo docker-compose -f docker-compose-${{env.TARGET_UPSTREAM}}.yml up -d

    - name: Check deploy server URL
      uses: jtalk/url-health-check-action@v3
      with:
        url: http://${{ secrets.COREAL_SERVER_IP }}:${{env.STOPPED_PORT}}/env
        max-attempts: 5
        retry-delay: 10s

    - name: Change nginx upstream
      uses: appleboy/ssh-action@master
      with:
        username: ubuntu
        host: ${{ secrets.COREAL_SERVER_IP }}
        key: ${{ secrets.BACK_EC2_SSH_KEY }}
        script_stop: true
        script: |
          sudo docker exec -i nginxserver bash -c 'echo "set \$service_url ${{ env.TARGET_UPSTREAM }};" > /etc/nginx/conf.d/service-env.inc && nginx -s reload'

    - name: Stop current server
      uses: appleboy/ssh-action@master
      with:
        username: ubuntu
        host: ${{ secrets.COREAL_SERVER_IP }}
        key: ${{ secrets.BACK_EC2_SSH_KEY }}
        script_stop: true
        script: |
          sudo docker stop ${{env.CURRENT_UPSTREAM}}
          sudo docker rm ${{env.CURRENT_UPSTREAM}}
